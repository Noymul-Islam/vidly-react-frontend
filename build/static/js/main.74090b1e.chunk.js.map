{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","common/pagination.jsx","common/listGroup.jsx","services/genreService.js","common/like.jsx","common/tableHeader.jsx","common/tableBody.jsx","common/table.jsx","services/authService.js","moviesTable.jsx","common/searchBox.jsx","Movie.jsx","utils/paginate.js","customers.jsx","rentals.jsx","notFound.jsx","common/navBar.jsx","common/input.jsx","common/Select.jsx","common/form.jsx","movieForm.jsx","loginForm.jsx","logout.jsx","common/protectedRoute.jsx","services/userService.js","registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","appiEndPoint","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","Pagination","_ref","itemCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","react_default","a","createElement","className","map","page","key","onClick","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","item","style","cursor","getGenres","Like","props","classes","liked","area-hidden","TableHeader","raiseSort","path","sortColumn","_this","order","onSort","column","this","_this2","columns","label","renderSortIcon","Component","TableBody","content","_this$props","data","createKey","renderCell","Table","tableHeader","tableBody","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","sent","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movie","handleDelete","asyncToGenerator","mark","originalMovies","state","filter","m","setState","t0","respone","handlePageChange","handleLike","toConsumableArray","index","indexOf","handleGenreSelect","genre","selectedGenre","searchQuery","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","handleSearch","query","genres","count","_this$state2","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","Customers","Retrals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Input","rest","objectWithoutProperties","htmlFor","assign","autoFocus","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","handleSubmit","preventDefault","doSubmit","validateProperty","obj","defineProperty","handleChange","_ref2","input","errorMessage","renderbutton","disabled","renderInput","common_input","common_Select","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovies","onSubmit","renderSelect","LoginForm","username","React","createRef","location","window","from","pathname","Redirect","Logout","ProtectedRoute","component","render","Route","RegisterForm","App","lib","navBar","Switch","protectedRoute","src_Movie","Rentals","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74090b1e.chunk.js","sourcesContent":["// import * as Sentry from '@sentry/browser';\r\n// import Raven from 'raven-js';\r\n\r\nfunction init() {\r\n}\r\n\r\nfunction log(error) {\r\nconsole.error(error);\r\n}\r\n\r\nexport default \r\n{\r\n    init,\r\n    log\r\n}","import axios from \"axios\";\r\nimport {toast} from 'react-toastify';\r\nimport logger from './logService';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500\r\n    if (!expectedError) {\r\n        console.log('Logging ther error', error);\r\n        logger.log(error);\r\n        toast('An unexpected error occured');\r\n    }\r\n    return Promise.reject(error);\r\n})\r\nfunction setJwt(jwt){\r\n    axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\nexport default {\r\n    get : axios.get,\r\n    post : axios.post,\r\n    put: axios.put,\r\n    delete : axios.delete,\r\n    setJwt\r\n}                      ","import http from './httpService';\r\nimport config from '../config.json'\r\nconst appiEndPoint = '/movies';\r\n\r\nfunction movieUrl(id){\r\n   return `${appiEndPoint}/${id}`;\r\n}\r\nexport function getMovies() {\r\n    return http.get(appiEndPoint);\r\n}\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId))\r\n}\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = { ...movie };\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n    return http.post(appiEndPoint, movie)\r\n\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nconst Pagination = ({ itemCount, pageSize, onPageChange, currentPage }) => {\r\n    const pageCount = Math.ceil(itemCount / pageSize);\r\n    if (pageCount === 1)\r\n        return null;\r\n    const pages = _.range(1, pageCount + 1);\r\n    return (<nav>\r\n        <ul className=\"pagination\">\r\n            {pages.map(page =>\r\n                <li key={page} className={currentPage === page ? \"page-item active\" : \"page-item\"}>\r\n                    <a className=\"page-link\" onClick={() => { onPageChange(page) }}>{page}</a>\r\n                </li>\r\n\r\n            )}\r\n        </ul>\r\n    </nav>);\r\n}\r\nPagination.propTypes = {\r\n    itemCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange : PropTypes.func.isRequired\r\n}\r\nexport default Pagination","import React from \"react\";\r\n\r\nconst ListGroup = ({ items, textProperty, valueProperty, onItemSelect, selectedItem }) => {\r\n    return <ul className=\"list-group\">\r\n        {items.map((item) => <li key={item[valueProperty]}\r\n            onClick={() => { onItemSelect(item) }}\r\n            style={{ cursor: \"pointer\" }}\r\n            className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}>\r\n            {item[textProperty]}\r\n        </li>)}\r\n\r\n    </ul>\r\n}\r\n\r\nexport default ListGroup;","import http from './httpService';\r\nimport config from '../config.json'\r\nexport  function getGenres() {\r\n    return http.get('/genres')\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nconst Like = (props)=>{\r\n    let classes = \"fa fa-heart\";\r\n    if(!props.liked) classes+= \"-o\";\r\n    return(\r\n       <i className={ classes }\r\n        style={{cursor : \"pointer\"}} onClick={props.onClick}\r\n         area-hidden=\"true\"></i>\r\n    )\r\n\r\n}\r\n\r\nexport default Like;","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => {\r\n        const sortColumn = { ...this.props.sortColumn };\r\n        if (sortColumn.path === path) {\r\n            sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n        }\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc'\r\n        }\r\n        this.props.onSort(sortColumn)\r\n    }\r\n    renderSortIcon(column)\r\n    {\r\n        const {sortColumn} = this.props;\r\n        if(column.path !== sortColumn.path)\r\n            return null;\r\n        if(sortColumn.order === 'asc')\r\n            return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\"></i>\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr key={1}>\r\n                    {this.props.columns.map(column => <th className=\"clickable\" key ={column.path || column.key} \r\n                    onClick={() => { this.raiseSort(column.path) }}>{column.label}{this.renderSortIcon(column)}</th>)}\r\n                </tr>\r\n            </thead>\r\n\r\n        )\r\n    }\r\n}\r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nclass TableBody extends Component {\r\n   renderCell(item,column)\r\n   {\r\n       if(column.content)\r\n            return column.content(item)\r\n        else\r\n            return _.get(item, column.path)\r\n   }\r\n   createKey(item, column)\r\n   {\r\n       return item._id + (column.path || column.key);\r\n   }\r\n    render() {\r\n        const { data,columns } = this.props;\r\n        return (\r\n            <tbody>\r\n                {data.map(item => \r\n                    <tr key={item._id}>\r\n                       {columns.map(column =>  <td key={this.createKey(item,column)}>{this.renderCell(item,column)}</td>)}\r\n                    </tr>\r\n                )}\r\n\r\n            </tbody>\r\n        )\r\n    }\r\n\r\n}\r\nexport default TableBody;","import React from 'react';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader';\r\nconst Table = ({columns , sortColumn , data , onSort})=>{\r\n//columns onSort movies\r\n    return (\r\n        <table className=\"table\">\r\n                <TableHeader columns={columns}\r\n                    sortColumn={sortColumn}\r\n                    onSort={onSort} />\r\n                <TableBody data={data} columns={columns} />\r\n        </table>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Table;","import http from './httpService';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst appiEndPoint = '/auth';\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(appiEndPoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n\r\n}\r\nexport function loginWithJwt(jwt){\r\n  localStorage.setItem(tokenKey,jwt);\r\n}\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n\r\n}\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\nexport function getJwt(){\r\n    return localStorage.getItem(tokenKey)\r\n}\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    getJwt\r\n}","import React, { Component } from \"react\";\r\nimport Like from './common/like';\r\nimport TableHeader from './common/tableHeader';\r\nimport TableBody from './common/tableBody';\r\nimport Table from './common/table';\r\nimport {Link} from 'react-router-dom';\r\nimport auth from './services/authService'\r\nclass MoviesTable extends Component {\r\n    columns = [{ path: 'title', label: 'Title',content: movie =><Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate' },\r\n    { key: \"like\", content: movie => (<Like liked={movie.liked} onClick={() => { this.props.onLike(movie) }} />) }]\r\n    deleteColumn =  { key: \"delete\", content: movie => (<button className=\"btn btn-danger btn-sm\" onClick={() => { this.props.onDelete(movie) }}>Delete</button>) }\r\n    constructor(){\r\n        super()\r\n        const user = auth.getCurrentUser();\r\n        if(user && user.isAdmin){\r\n            this.columns.push(\r\n              this.deleteColumn  \r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        const { movies, sortColumn, onSort } = this.props;\r\n        return (\r\n            <Table data={movies} columns = {this.columns}\r\n               onSort = {onSort} sortColumn = {sortColumn}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst SearchBox = ({value,onChange})=>{\r\n    return(\r\n        <input\r\n        type=\"text\"\r\n        name = \"query\"\r\n        className=\"form-control my-3\"\r\n        placeholder=\"... Search\"\r\n        value ={value}\r\n        onChange = {e=> onChange(e.currentTarget.value)}\r\n        />\r\n\r\n    ); \r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { getMovies, deleteMovie } from './services/movieService'\r\nimport { toast } from 'react-toastify';\r\nimport Pagination from './common/pagination';\r\nimport { paginate } from './utils/paginate';\r\nimport ListGroup from './common/listGroup';\r\nimport { getGenres } from './services/genreService';\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBox from './common/searchBox';\r\nclass Movie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            currentPage: 1,\r\n            pageSize: 4,\r\n            genres: [],\r\n            selectedGenre: null,\r\n            searchQuery: \"\",\r\n            sortColumn: { path: 'title', order: 'asc' }\r\n\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        const { data } = await getGenres()\r\n        const genres = [{ _id: \"\", name: 'All Genres' }, ...data];\r\n        const { data: movies } = await getMovies();\r\n        this.setState({ movies: movies, genres });\r\n    }\r\n    handleDelete = async (movie) => {\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter(m => m._id !== movie._id)\r\n        this.setState({ movies });\r\n        try {\r\n            await deleteMovie(movie._id);\r\n\r\n        } catch (ex) {\r\n            if (ex.respone && ex.response.status === 404) {\r\n                toast.error('This movie has already been deleted');\r\n                this.setState({ movies: originalMovies });\r\n            }\r\n        }\r\n\r\n    }\r\n    handlePageChange = (page) => {\r\n        //   console.log(page);\r\n        this.setState({ currentPage: page });\r\n\r\n\r\n    }\r\n    handleLike = (movie) => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = { ...movie };\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({ movies });\r\n    }\r\n    handleGenreSelect = (genre) => {\r\n        console.log(genre);\r\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n    }\r\n    handleSort = (sortColumn) => {\r\n\r\n        this.setState({ sortColumn })\r\n\r\n    }\r\n\r\n    getPagedData = () => {\r\n        const { pageSize, currentPage,\r\n            sortColumn,\r\n            movies: allMovies,\r\n            selectedItem, searchQuery, selectedGenre } = this.state;\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n            filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()))\r\n        else if (selectedGenre && selectedGenre._id)\r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n        return {\r\n            totalCount: filtered.length,\r\n            data: movies\r\n        }\r\n    }\r\n    handleSearch = query => {\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n    }\r\n    render() {\r\n        const count = this.state.movies.length;\r\n        const { user } = this.props;\r\n        const { pageSize, currentPage,\r\n            sortColumn, searchQuery } = this.state;\r\n        if (count === 0)\r\n            return <p>There is no movie in the database</p>\r\n\r\n        const { totalCount, data: movies } = this.getPagedData();\r\n        return (\r\n            <main>\r\n                <div className=\"row m-4\">\r\n                    <div className=\"col-3\">\r\n                        <ListGroup items={this.state.genres}\r\n                            textProperty=\"name\"\r\n                            valueProperty=\"_id\"\r\n                            onItemSelect={this.handleGenreSelect}\r\n                            selectedItem={this.state.selectedItem} />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        { user &&\r\n                            <Link to=\"/movies/new\"\r\n                                className=\"btn btn-primary\"\r\n                                style={{ marginBottom: 20 }}>\r\n                                New Movie\r\n                        </Link>\r\n                        }\r\n                        <p>Showing {totalCount} movies from database</p>\r\n                        <SearchBox\r\n                            value={searchQuery}\r\n                            onChange={this.handleSearch}\r\n\r\n                        />\r\n                        <MoviesTable\r\n                            movies={movies}\r\n                            onLike={this.handleLike}\r\n                            onDelete={this.handleDelete}\r\n                            onSort={this.handleSort}\r\n                            sortColumn={sortColumn}\r\n                        />\r\n                        <Pagination itemCount={totalCount} pageSize={pageSize}\r\n                            onPageChange={this.handlePageChange}\r\n                            currentPage={currentPage}\r\n\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items,pageNumber,pageSize)\r\n{\r\n    const startIndex = (pageNumber-1)*pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from 'react';\r\n\r\nconst Customers = (props) => {\r\n    return (<h1>Hello Customers</h1>)\r\n}\r\n\r\nexport default Customers; ","import React from 'react';\r\n\r\nconst Retrals = (props)=>{\r\n        return (\r\n            <h1>Rentals</h1>\r\n        )\r\n}\r\nexport default Retrals;","import React from 'react';\r\n\r\n\r\nconst NotFound = (props)=>{\r\n    return (\r\n        <h1>Not Found</h1>\r\n    )\r\n}\r\nexport default NotFound;","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nconst NavBar = ({ user }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"#\">Vidly</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/movies\">Movies <span className=\"sr-only\">(current)</span></NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/customers\">Customers</NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                    {\r\n                        !user &&\r\n                        <React.Fragment>\r\n                            <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\r\n                            <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        user &&\r\n                        <React.Fragment>\r\n                            <NavLink className=\"nav-item nav-link\" to=\"/profile\">{user.name}</NavLink>\r\n                            <NavLink className=\"nav-item nav-link\" to=\"/logout\">Logout</NavLink>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Input = ({name,label,error, ...rest}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                {...rest}\r\n                autoFocus\r\n                id={name}\r\n                name={name}\r\n                className=\"form-control\"\r\n                >\r\n            </input>\r\n            { error && <div className=\"alert alert-danger\">{error}</div>}\r\n    \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"Select movie\" />\r\n                \r\n                    {options.map(option => (\r\n                        <option key={option._id} value={option._id}>\r\n                            {option.name}\r\n                        </option>\r\n                    ))}\r\n            \r\n            </select>\r\n\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './Select';\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    };\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n        if (!error) return null;\r\n        const errors = {};\r\n        for (let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        debugger;\r\n        if (errors) return;\r\n\r\n        this.doSubmit()\r\n\r\n    }\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value }\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else\r\n            delete errors[input.name];\r\n        const data = { ...this.state.data }\r\n        data[input.name] = input.value;\r\n        this.setState({ data, errors });\r\n    }\r\n    renderbutton = (label) => {\r\n        return (\r\n            <button disabled={this.validate()}\r\n                className=\"btn btn-primary\">{label}</button>\r\n        );\r\n    }\r\n    renderSelect(name, label, options)\r\n    {\r\n        const {data,errors} = this.state;\r\n        return (\r\n            <Select\r\n             name = {name}\r\n             value = {data[name]}\r\n             label = {label}\r\n             options ={options}\r\n             onChange = {this.handleChange}\r\n             error = {errors[name]}\r\n            />\r\n        )\r\n\r\n    }\r\n    renderInput = (name, label, type = \"text\") => {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            <Input name={name}\r\n                type={type}\r\n                value={data[name]}\r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Form;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovie, saveMovie } from './services/movieService';\r\nimport { getGenres } from './services/genreService';\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\"\r\n        },\r\n        genres: [],\r\n        errors: {}\r\n    }\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n            .required()\r\n            .label(\"Title\"),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label(\"Genre\"),\r\n        numberInStock: Joi.string()\r\n            .required()\r\n            .min(0)\r\n            .max(100)\r\n            .label(\"Number in Stock\"),\r\n        dailyRentalRate: Joi.string()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label(\"Daily Rental Rate\")\r\n\r\n    }\r\n    async populateGenres() {\r\n        const { data: genres } = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n    async populateMovies() {\r\n        try {\r\n            const movieId = this.props.match.params.id;\r\n            if (movieId === 'new')\r\n                return;\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) });\r\n\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                this.props.history.replace(\"/not-found\");\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateGenres()\r\n        await this.populateMovies()\r\n    }\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        }\r\n    }\r\n    doSubmit = async () => {\r\n       await saveMovie(this.state.data);\r\n        this.props.history.push(\"/movies\");\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('title', 'Title')}\r\n                    {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n\r\n                    {this.renderInput('numberInStock', 'Number In Stock', \"number\")}\r\n                    {this.renderInput('dailyRentalRate', 'Rate')}\r\n                    {this.renderbutton('Save')}\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default MovieForm;","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from './services/authService';\r\nclass LoginForm extends Form {\r\n    username = React.createRef();\r\n    state = {\r\n        data: { username: \"\", password: \"\" },\r\n        errors: {}\r\n    }\r\n    schema = {\r\n        username: Joi.string().required().label(\"Uername\"),\r\n        password: Joi.string().required().label(\"Password\")\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;\r\n            await auth.login(data.username, data.password);\r\n            const {state}  = this.props.location;\r\n            window.location = state ? state.from.pathname : \"/movies\";\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ... this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(auth.getCurrentUser())\r\n            return <Redirect to=\"/movies\" />\r\n        return (\r\n            <div>\r\n                <h1>Login complete</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password', \"password\")}\r\n                    {this.renderbutton('Login')}\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport auth from './services/authService';\r\nclass Logout extends Component {\r\n    \r\n    componentDidMount(){\r\n        auth.logout();\r\n        window.location = \"/\";\r\n    }\r\n    render() {\r\n        return null;\r\n\r\n    }\r\n\r\n}\r\nexport default Logout;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport auth from '../services/authService';\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            render={props => {\r\n                if (!auth.getCurrentUser())\r\n                    return <Redirect to={{\r\n                        pathname : \"/login\",\r\n                        state : {from : props.location}\r\n                    }} />\r\n                return Component ? <Component {...props} /> : render(props)\r\n            }}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import http from './httpService';\r\nimport config from '../config.json'\r\nconst appiEndPoint = '/users';\r\n\r\n\r\nexport function register(user) {\r\n   return  http.post(appiEndPoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\nimport * as userService from './services/userService';\r\nimport auth from './services/authService';\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data: { username: \"\", password: \"\", name: \"\" },\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n            .required()\r\n            .email()\r\n            .label(\"Username\")\r\n        ,\r\n        password: Joi.string()\r\n            .required()\r\n            .min(5)\r\n            .label(\"Password\")\r\n        ,\r\n        name: Joi.string()\r\n            .required()\r\n            .label('Name')\r\n    }\r\n    async doSubmit() {\r\n        try {\r\n            const response = await userService.register(this.state.data);\r\n            auth.loginWithJwt(response.headers['x-auth-token'])\r\n            window.location = \"/movies\";\r\n\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ... this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Registration Information</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('name', 'Name')},\r\n                    {this.renderInput('username', 'UserName')}\r\n                    {this.renderInput('password', 'Password')},\r\n\r\n                    {this.renderbutton('Register')}\r\n                </form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\nimport './App.css';\nimport Movie from './Movie';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify'\nimport Customers from './customers';\nimport Rentals from './rentals';\nimport NotFound from './notFound';\nimport NavBar from './common/navBar';\nimport MovieForm from './movieForm';\nimport LoginForm from './loginForm';\nimport Logout from './logout'\nimport ProtectedRoute from './common/protectedRoute'\nimport auth from './services/authService';\nimport RegisterForm from './registerForm';\nimport \"react-toastify/dist/ReactToastify.css\"\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n\n  }\n  render() {\n    const {user} = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component = {MovieForm}\n             />\n            <Route path=\"/movies\" render={props => <Movie {...props} user={this.state.user} />} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/login\" />\n            <Redirect to=\"/not-found\" />\n\n          </Switch>\n          {/* <Movie/> */}\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}